theme(
text = element_text(color = "#22211d"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
...
)
}
conflict_prefer("filter", "dplyr")
data <- read_csv(here( "Presidential Forecasting 2020", "Percent2PartyVote .csv"))
predCal <- data %>%
filter(Year !=2020) %>%
rename(NB = `N-B`,
EW = `Erikson and Wlezien`,
LB = `Lewis Beck-Tien`,
DeSart = `Jay DeSart`,
Graefe = `Andreas Graefe`,
BVN = `Jerome Bruno Jerome Veronique and Richard Nadeau`,
Lichtman = `Allan Lichtman`,
RBNF = `Thomas Rietz Joyce Berg Forrest Nelson Robert Forsythe`) %>%
select(-c(Year,truth))
outCal <- data %>%
filter(Year !=2020) %>%
select(truth) %>%
as.data.frame()
years <- data$Year
predCal <- data %>%
filter(Year !=2020) %>%
rename(NB = `N-B`,
EW = `Erikson and Wlezien`,
LB = `Lewis Beck-Tien`,
DeSart = `Jay DeSart`,
Graefe = `Andreas Graefe`,
BVN = `Jerome Bruno Jerome Veronique and Richard Nadeau`,
Lichtman = `Allan Lichtman`,
RBNF = `Thomas Rietz Joyce Berg Forrest Nelson Robert Forsythe`) %>%
select(-c(Year,truth))
outCal <- data %>%
filter(Year !=2020) %>%
select(truth) %>%
as.data.frame()
this.ForecastData <- makeForecastData(.predCalibration = as.data.frame(predCal), .outcomeCalibration = outCal[,1], .modelNames= names(predCal))
thisEnsembleBayes1 <- calibrateEnsemble(this.ForecastData, method = "gibbs",
iterations = 250000, burns = 40000, thinning = 4,
predType = "posteriorMean", model="normal",
useModelParams=FALSE,
modelPriors = rep(alpha,dim(insamplePred)[2]),
W = initW1)
thisEnsembleBayes2 <- calibrateEnsemble(this.ForecastData, method = "gibbs",
iterations = 250000, burns = 40000, thinning = 4,
predType = "posteriorMean", model="normal",
useModelParams=FALSE,
modelPriors = rep(alpha,dim(insamplePred)[2]),
W = initW2)
thisEnsembleBayes3 <- calibrateEnsemble(this.ForecastData, method = "gibbs",
iterations = 250000, burns = 40000, thinning = 4,
predType = "posteriorMean", model="normal",
useModelParams=FALSE,
modelPriors = rep(alpha,dim(insamplePred)[2]),
W = initW3)
library(here)
library(EBMAforecast)
library(tidyverse)
library(readr)
library(conflicted)
library(colorRamps)
library(RColorBrewer)
library(furrr)
library(tictoc)
theme_plot <- function(...) {
theme_minimal() +
theme(
text = element_text(color = "#22211d"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
...
)
}
conflict_prefer("filter", "dplyr")
data <- read_csv(here( "Presidential Forecasting 2020", "Percent2PartyVote .csv"))
## say alpha = 0.25
initW1 <- c(rep(1/15,15))
initW2 <- c(rep(1/4,4),rep(0,11))
initW3 <- c(rep(0,8),rep(1/7,7))
predCal <- data %>%
filter(Year !=2020) %>%
rename(NB = `N-B`,
EW = `Erikson and Wlezien`,
LB = `Lewis Beck-Tien`,
DeSart = `Jay DeSart`,
Graefe = `Andreas Graefe`,
BVN = `Jerome Bruno Jerome Veronique and Richard Nadeau`,
Lichtman = `Allan Lichtman`,
RBNF = `Thomas Rietz Joyce Berg Forrest Nelson Robert Forsythe`) %>%
select(-c(Year,truth))
outCal <- data %>%
filter(Year !=2020) %>%
select(truth) %>%
as.data.frame()
this.ForecastData <- makeForecastData(.predCalibration = as.data.frame(predCal), .outcomeCalibration = outCal[,1], .modelNames= names(predCal))
thisEnsembleBayes1 <- calibrateEnsemble(this.ForecastData, method = "gibbs",
iterations = 250000, burns = 40000, thinning = 4,
predType = "posteriorMean", model="normal",
useModelParams=FALSE,
modelPriors = rep(alpha,dim(insamplePred)[2]),
W = initW1)
## say alpha = 0.25
alpha = 0.25
initW1 <- c(rep(1/15,15))
initW2 <- c(rep(1/4,4),rep(0,11))
initW3 <- c(rep(0,8),rep(1/7,7))
predCal <- data %>%
filter(Year !=2020) %>%
rename(NB = `N-B`,
EW = `Erikson and Wlezien`,
LB = `Lewis Beck-Tien`,
DeSart = `Jay DeSart`,
Graefe = `Andreas Graefe`,
BVN = `Jerome Bruno Jerome Veronique and Richard Nadeau`,
Lichtman = `Allan Lichtman`,
RBNF = `Thomas Rietz Joyce Berg Forrest Nelson Robert Forsythe`) %>%
select(-c(Year,truth))
outCal <- data %>%
filter(Year !=2020) %>%
select(truth) %>%
as.data.frame()
this.ForecastData <- makeForecastData(.predCalibration = as.data.frame(predCal), .outcomeCalibration = outCal[,1], .modelNames= names(predCal))
this.ForecastData <- makeForecastData(.predCalibration = as.data.frame(predCal), .outcomeCalibration = outCal[,1], .modelNames= names(predCal))
thisEnsembleBayes1 <- calibrateEnsemble(this.ForecastData, method = "gibbs",
iterations = 250000, burns = 40000, thinning = 4,
predType = "posteriorMean", model="normal",
useModelParams=FALSE,
modelPriors = rep(alpha,dim(predCal)[2]),
W = initW1)
thisEnsembleBayes2 <- calibrateEnsemble(this.ForecastData, method = "gibbs",
iterations = 250000, burns = 40000, thinning = 4,
predType = "posteriorMean", model="normal",
useModelParams=FALSE,
modelPriors = rep(alpha,dim(predCal)[2]),
W = initW2)
thisEnsembleBayes3 <- calibrateEnsemble(this.ForecastData, method = "gibbs",
iterations = 250000, burns = 40000, thinning = 4,
predType = "posteriorMean", model="normal",
useModelParams=FALSE,
modelPriors = rep(alpha,dim(predCal)[2]),
W = initW3)
colMeans(thisEnsembleBayes1@posteriorWeights)
#### let's look whether it converged
colMeans(thisEnsembleBayes1@posteriorWeights)
colMeans(thisEnsembleBayes2@posteriorWeights)
colMeans(thisEnsembleBayes3@posteriorWeights)
#### let's look whether it converged
round(colMeans(thisEnsembleBayes1@posteriorWeights),3)
round(colMeans(thisEnsembleBayes2@posteriorWeights),3)
round(colMeans(thisEnsembleBayes3@posteriorWeights),3)
### plot densities for abramowitz
forPlot <- tibble(weights = c(thisEnsembleBayes1@posteriorWeights[,1], thisEnsembleBayes2@posteriorWeights[,1], thisEnsembleBayes3@posteriorWeights[,1]), run = c(rep("Start 1", dim(thisEnsembleBayes1@posteriorWeights)[1]), rep("Start 2", dim(thisEnsembleBayes2@posteriorWeights)[1]), rep("Start 3", dim(thisEnsembleBayes3@posteriorWeights)[1])))
plot <- ggplot(data=forPlot, aes(x = weights, color = run))
plot <- plot + geom_density(alpha=0.4,size=1)  #+ facet_wrap(vars(model))
plot <- plot +labs( y="Density", x="posterior Weight",  title = "Run 1: Starting W = 1,0,0")
plot <- plot + theme(axis.text.x=element_text(size=15, face = "bold"), axis.text.y=element_text(size=15, face = "bold"), axis.title.x = element_text(size = 15),axis.title.y = element_text(angle = 90, size = 15), plot.title = element_text(size=15))
plot(plot)
posteriorFull <- bind_rows(thisEnsembleBayes1@posteriorWeights,thisEnsembleBayes2@posteriorWeights,thisEnsembleBayes3@posteriorWeights)
names(thisEnsembleBayes1@posteriorWeights) <- names(thisEnsembleBayes2@posteriorWeights) <- names(thisEnsembleBayes3@posteriorWeights) <- names(predCal)
posteriorFull <- bind_rows(thisEnsembleBayes1@posteriorWeights,thisEnsembleBayes2@posteriorWeights,thisEnsembleBayes3@posteriorWeights)
posteriorFull <- bind_rows(thisEnsembleBayes1@posteriorWeights,thisEnsembleBayes2@posteriorWeights,thisEnsembleBayes3@posteriorWeights)
dim(thisEnsembleBayes1@posteriorWeights)
names(thisEnsembleBayes1@posteriorWeights)
weights <- as_tibble(thisEnsembleBayes1@posteriorWeights, .name_repair = "minimal")
names(thisEnsembleBayes1@posteriorWeights)
weights2 <- as_tibble(thisEnsembleBayes2@posteriorWeights, .name_repair = "minimal")
weights3 <- as_tibble(thisEnsembleBayes3@posteriorWeights, .name_repair = "minimal")
weights2
names(weights1) <- names(weights2) <- names(weights3) <- names(predCal)
weights1 <- as_tibble(thisEnsembleBayes1@posteriorWeights, .name_repair = "minimal")
weights2 <- as_tibble(thisEnsembleBayes2@posteriorWeights, .name_repair = "minimal")
weights3 <- as_tibble(thisEnsembleBayes3@posteriorWeights, .name_repair = "minimal")
names(weights1)
names(weights1) <- names(weights2) <- names(weights3) <- names(predCal)
posteriorFull <- bind_rows(weights1,weights2,weights3)
dim(posteriorFull)
library(coda)
tt<-as.mcmc.list(list(thisEnsembleBayes1@posteriorWeights, thisEnsembleBayes2@posteriorWeights, thisEnsembleBayes3@posteriorWeights))
tt<-as.mcmc.list(list(as.mcmc(thisEnsembleBayes1@posteriorWeights), as.mcmc(thisEnsembleBayes2@posteriorWeights), as.mcmc(thisEnsembleBayes3@posteriorWeights)))
tt
tidy_draws(tt)
tt<-as.mcmc.list(list(as.mcmc(thisEnsembleBayes1@posteriorWeights), as.mcmc(thisEnsembleBayes2@posteriorWeights), as.mcmc(thisEnsembleBayes3@posteriorWeights)))
library(tidybayes)
install.packages('tidybayes')
library(tidybayes)
tidy_draws(tt)
tidy_posterior <- tidy_draws(mcmc.posterior) %>%
median_qi()
mcmc.posterior <-as.mcmc.list(list(as.mcmc(thisEnsembleBayes1@posteriorWeights), as.mcmc(thisEnsembleBayes2@posteriorWeights), as.mcmc(thisEnsembleBayes3@posteriorWeights)))
tidy_posterior <- tidy_draws(mcmc.posterior) %>%
median_qi()
tidy_posterior
print(tidy_posteriorn = 100)
print(tidy_posterior,n = 100)
tidy_posterior <- tidy_draws(mcmc.posterior) %>%
spread_draws()
median_qi()
tidy_draws(mcmc.posterior) %>%
spread_draws()
tidy_posterior <- tidy_draws(mcmc.posterior) %>%
gather_draws()
tidy_posterior <- tidy_draws(mcmc.posterior)
tidy_posterior
names(tidy_posterior)
names(tidy_posterior)[4:19] <- names(predCal)
names(tidy_posterior)[4:18] <- names(predCal)
tidy_posterior
tidy_posterior %>%
spread_draws() %>%
median_qi()
tidy_posterior %>%
spread_draws(names(tidy_posterior)[4:18]) %>%
median_qi()
names(tidy_posterior)[4:18] <- names(predCal)
names(predCal)
tidy_posterior %>%
spread_draws(Abramowitz, Campbell) %>%
median_qi()
tidy_posterior %>%
gather_draws(Abramowitz, Campbell) %>%
median_qi()
tidy_posterior %>%
gather_draws(Abramowitz, Campbell) %>%
mean_qi()
tidy_posterior %>%
gather_draws(Abramowitz, Campbell, Cuzan, EW, Hibbs, Holbrook, LB, Lockerbie, NB, Fair, DeSart, Graefe, BVN, Lichtman, RBNF) %>%
mean_qi()
colMeans(posteriorFull)
posterior_summary <- tidy_posterior %>%
gather_draws(Abramowitz, Campbell, Cuzan, EW, Hibbs, Holbrook, LB, Lockerbie, NB, Fair, DeSart, Graefe, BVN, Lichtman, RBNF) %>%
mean_qi()
posterior_summary <- tidy_posterior %>%
gather_draws(Abramowitz, Campbell, Cuzan, EW, Hibbs, Holbrook, LB, Lockerbie, NB, Fair, DeSart, Graefe, BVN, Lichtman, RBNF) %>%
mean_qi() %>%
select(-c(.wdith, .point, .interval))
posterior_summary
posterior_summary <- tidy_posterior %>%
gather_draws(Abramowitz, Campbell, Cuzan, EW, Hibbs, Holbrook, LB, Lockerbie, NB, Fair, DeSart, Graefe, BVN, Lichtman, RBNF) %>%
mean_qi() %>%
select(-c(.width, .point, .interval))
posterior_summary
posterior_summary <- tidy_posterior %>%
gather_draws(Abramowitz, Campbell, Cuzan, EW, Hibbs, Holbrook, LB, Lockerbie, NB, Fair, DeSart, Graefe, BVN, Lichtman, RBNF) %>%
mean_qi() %>%
select(-c(.width, .point, .interval)) %>%
rename(model = .variable,
Mean = .value,
'lower Bound' = .lower)
posterior_summary
posterior_summary <- tidy_posterior %>%
gather_draws(Abramowitz, Campbell, Cuzan, EW, Hibbs, Holbrook, LB, Lockerbie, NB, Fair, DeSart, Graefe, BVN, Lichtman, RBNF) %>%
mean_qi() %>%
select(-c(.width, .point, .interval)) %>%
rename(model = .variable,
'Posterior Mean' = .value,
'lower Bound' = .lower,
'upper Bound' = .lower)
tab <- kable(posterior_summary, "latex", booktabs = T, linesep = "", caption = "Posterior Model Weights", label = "tab:weights")
library(kableExtra)
library(modelsummary)
### from kableExtra
solve_enc <- function(x) {
#may behave differently based on Sys.setlocale settings with respect to characters
out <- enc2utf8(as.character(base::format(x, trim = TRUE, justify = 'none')))
mostattributes(out) <- attributes(x)
return(out)
}
tab <- kable(posterior_summary, "latex", booktabs = T, linesep = "", caption = "Posterior Model Weights", label = "tab:weights")
tab
tab <- kable(posterior_summary, "latex", booktabs = T, linesep = "", caption = "Posterior Model Weights", label = "tab:weights") %>%
kable_styling(latex_options =c("scale_down"), position = "center")
this.ForecastData <- makeForecastData(.predCalibration = as.data.frame(predCal[,c(1,2,15)]), .outcomeCalibration = outCal[,1], .modelNames= names(predCal[,c(1,2,15)]))
tab
posterior_summary <- tidy_posterior %>%
gather_draws(Abramowitz, Campbell, Cuzan, EW, Hibbs, Holbrook, LB, Lockerbie, NB, Fair, DeSart, Graefe, BVN, Lichtman, RBNF) %>%
mean_qi() %>%
select(-c(.width, .point, .interval)) %>%
rename(model = .variable,
'Posterior Mean' = .value,
'lower Bound' = .lower,
'upper Bound' = .upper)
tab <- kable(posterior_summary, "latex", booktabs = T, linesep = "", caption = "Posterior Model Weights", label = "tab:weights") %>%
kable_styling(latex_options =c("scale_down"), position = "center")
tab
posterior_summary <- tidy_posterior %>%
gather_draws(Abramowitz, Campbell, Cuzan, EW, Hibbs, Holbrook, LB, Lockerbie, NB, Fair, DeSart, Graefe, BVN, Lichtman, RBNF) %>%
mean_qi() %>%
select(-c(.width, .point, .interval)) %>%
rename(model = .variable,
'Posterior Mean' = .value,
'lower Bound' = .lower,
'upper Bound' = .upper)
tab <- kable(posterior_summary, "latex", booktabs = T, linesep = "", caption = "Posterior Model Weights", label = "tab:weights") %>%
kable_styling(latex_options =c("scale_down"), position = "center") %>%
add_header_above(c(" " = 1, setNames(3, "Posterior Mean and 95% Credible Intervals")), bold = TRUE)
tab
tab <- kable(posterior_summary, "latex", booktabs = T, linesep = "", caption = "Posterior Model Weights", label = "tab:weights") %>%
kable_styling(latex_options =c("scale_down"), position = "center") %>%
add_header_above(c(" " = 1, setNames(3, "Posterior Mean and 95% Credible Intervals")), bold = TRUE)
posterior_summary <- tidy_posterior %>%
gather_draws(Abramowitz, Campbell, Cuzan, EW, Hibbs, Holbrook, LB, Lockerbie, NB, Fair, DeSart, Graefe, BVN, Lichtman, RBNF) %>%
mean_qi() %>%
select(-c(.width, .point, .interval)) %>%
mutate(.value = round(.value,3),
.lower = round(.lower, 3),
.upper = round(.upper, 3)) %>%
rename(model = .variable,
'Posterior Mean' = .value,
'lower Bound' = .lower,
'upper Bound' = .upper) %>%
tab <- kable(posterior_summary, "latex", booktabs = T, linesep = "", caption = "Posterior Model Weights", label = "tab:weights") %>%
kable_styling(latex_options =c("scale_down"), position = "center") %>%
add_header_above(c(" " = 1, setNames(3, "Posterior Mean and 95% Credible Intervals")), bold = TRUE)
posterior_summary <- tidy_posterior %>%
gather_draws(Abramowitz, Campbell, Cuzan, EW, Hibbs, Holbrook, LB, Lockerbie, NB, Fair, DeSart, Graefe, BVN, Lichtman, RBNF) %>%
mean_qi() %>%
select(-c(.width, .point, .interval)) %>%
mutate(.value = round(.value,3),
.lower = round(.lower, 3),
.upper = round(.upper, 3)) %>%
rename(model = .variable,
'Posterior Mean' = .value,
'lower Bound' = .lower,
'upper Bound' = .upper)
tab <- kable(posterior_summary, "latex", booktabs = T, linesep = "", caption = "Posterior Model Weights", label = "tab:weights") %>%
kable_styling(latex_options =c("scale_down"), position = "center") %>%
add_header_above(c(" " = 1, setNames(3, "Posterior Mean and 95% Credible Intervals")), bold = TRUE)
tab
posterior_summary <- tidy_posterior %>%
gather_draws(Abramowitz, Campbell, Cuzan, EW, Hibbs, Holbrook, LB, Lockerbie, NB, Fair, DeSart, Graefe, BVN, Lichtman, RBNF) %>%
mean_qi() %>%
select(-c(.width, .point, .interval)) %>%
mutate(.value = round(.value,3),
.lower = round(.lower, 3),
.upper = round(.upper, 3)) %>%
rename(Model = .variable,
'Posterior Mean' = .value,
'lower Bound' = .lower,
'upper Bound' = .upper)
tab <- kable(posterior_summary, "latex", booktabs = T, linesep = "", caption = "Posterior Model Weights", label = "weights") %>%
kable_styling(latex_options =c("scale_down"), position = "center") %>%
add_header_above(c(" " = 1, setNames(3, "Posterior Mean and 95% Credible Intervals")), bold = TRUE)
tab
posterior_summary
load(here("Results", "CV_results.rda"))
dim(CV_results)
grid <- expand_grid(years = data$Year, alpha = c(0.01, 0.05, 0.1, 0.2, 0.225, 0.25, 0.275, 0.3, 0.325, 0.35, 0.375, 0.4, 0.45, 0.5, 0.6, 0.8, 1), weights = c(1,2, 3))
dim(grid)
names(CV_results)
CV_results
names(insamplePred)
convergence <- CV_results %>%
pivot_longer(cols = c(names(predCal)))
predCal
library(here)
library(EBMAforecast)
library(tidyverse)
library(readr)
library(conflicted)
library(colorRamps)
library(RColorBrewer)
library(furrr)
library(tictoc)
theme_plot <- function(...) {
theme_minimal() +
theme(
text = element_text(color = "#22211d"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
...
)
}
conflict_prefer("filter", "dplyr")
data <- read_csv(here( "Presidential Forecasting 2020", "Percent2PartyVote .csv"))
predCal <- data %>%
filter(Year !=2020) %>%
rename(NB = `N-B`,
EW = `Erikson and Wlezien`,
LB = `Lewis Beck-Tien`,
DeSart = `Jay DeSart`,
Graefe = `Andreas Graefe`,
BVN = `Jerome Bruno Jerome Veronique and Richard Nadeau`,
Lichtman = `Allan Lichtman`,
RBNF = `Thomas Rietz Joyce Berg Forrest Nelson Robert Forsythe`) %>%
select(-c(Year,truth))
convergence <- CV_results %>%
pivot_longer(cols = c(names(predCal))) %>%
rename(Forecast = name)
names(predCal)
library(here)
library(EBMAforecast)
library(tidyverse)
library(readr)
library(conflicted)
library(colorRamps)
library(RColorBrewer)
library(furrr)
library(tictoc)
theme_plot <- function(...) {
theme_minimal() +
theme(
text = element_text(color = "#22211d"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
...
)
}
conflict_prefer("filter", "dplyr")
data <- read_csv(here( "Presidential Forecasting 2020", "Percent2PartyVote .csv"))
predCal <- data %>%
filter(Year !=2020) %>%
rename(NB = `N-B`,
EW = `Erikson and Wlezien`,
LB = `Lewis Beck-Tien`,
DeSart = `Jay DeSart`,
Graefe = `Andreas Graefe`,
BVN = `Jerome Bruno Jerome Veronique and Richard Nadeau`,
Lichtman = `Allan Lichtman`,
RBNF = `Thomas Rietz Joyce Berg Forrest Nelson Robert Forsythe`) %>%
select(-c(Year,truth))
outCal <- data %>%
filter(Year !=2020) %>%
select(truth) %>%
as.data.frame()
years <- data$Year
insamplePred <- data %>%
dplyr::filter(Year != year & Year != 2020) %>%
dplyr::select(-c(Year,truth)) %>%
as.data.frame()
convergence <- CV_results %>%
pivot_longer(cols = c(names(predCal))) %>%
rename(Forecast = name)
insamplePred <- data %>%
dplyr::filter(Year != year & Year != 2020) %>%
dplyr::select(-c(Year,truth)) %>%
as.data.frame()
insamplePred <- data %>%
dplyr::filter(Year != 2020) %>%
dplyr::select(-c(Year,truth)) %>%
as.data.frame()
convergence <- CV_results %>%
pivot_longer(cols = c(names(insamplePred))) %>%
rename(Forecast = name)
convergence
convergence
conflict_prefer("lag", "dplyr")
convergence <- CV_results %>%
pivot_longer(cols = c(names(insamplePred))) %>%
rename(Forecast = name) %>%
mutate(weight_lag = lag(value, order_by = StartingValue))
convergence
rm(dat)
convergence <- CV_results %>%
pivot_longer(cols = c(names(insamplePred))) %>%
rename(Forecast = name) %>%
group_by(OutYear, Alpha, Forecast)
mutate(weight_lag = lag(value, order_by = StartingValue))
convergence <- CV_results %>%
pivot_longer(cols = c(names(insamplePred))) %>%
rename(Forecast = name) %>%
group_by(OutYear, Alpha, Forecast) %>%
mutate(weight_lag = lag(value, order_by = StartingValue))
convergence
library(here)
library(EBMAforecast)
library(tidyverse)
library(readr)
library(conflicted)
library(colorRamps)
library(RColorBrewer)
library(furrr)
library(tictoc)
theme_plot <- function(...) {
theme_minimal() +
theme(
text = element_text(color = "#22211d"),
axis.line = element_blank(),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
axis.title.x = element_blank(),
axis.title.y = element_blank(),
...
)
}
conflict_prefer("filter", "dplyr")
data <- read_csv(here( "Presidential Forecasting 2020", "Percent2PartyVote .csv"))
data
names(data)
data <- read_csv(here( "Presidential Forecasting 2020", "Percent2PartyVote .csv")) %>%
select(-c(Cuzan, Hibbs, Holbrook, 'N-B'))
names(data)
