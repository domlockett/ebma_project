head(Z)
W
W
head(Z)
PP.W
head(Z)
W
sum(W)
head(Z)
W
W
sum(W)
W
W
predict(lm.model.econ)
predict(lm.model.econ0
)
predict(lm.model.econ)
predict(glm.model.econ)
str(model.polisci)
head(pp.m1)
pp.m1
max(pp.m1)
min(pp.m1)
model.polisci@mu
min(model.polisci@mu)
model.polisci@eta-model.polisci@mu
min(pp.m2)
plot(pp.m3)
head(pp.m3)
hist(pp.m4)
head(pp)
dim(pp)
ncols(pp.raw)
ncol(pp.raw)
model.glm.simpl$y
glm.model.econ$y
pp.raw[1,]
length(y)
length(pp.m2)
length(pp.m4)
length(pp.m1)
pp.m2
is.na(pp.m2)
sum(is.na(pp.m2))
str(this.model)
this.model$deviance
log.lik
W
W%*%log.lik
sum(log.lik)
sum(W)
W
log.lik
head(PP.matrix)
head(1-PP.matrix)
PP.W.one
PP.W.one%*%y
y%*%PP.W.one
LL
PP.W.one
PP.W.zero
PP.W.one
my.em()
my.em()
log.lik
W
W
sum(W)
head(z.numerator.one)
head(z.numerator.zero)
head(y)
z.numerator[1,]
head(Z)
sum(Z[1,])
W
warnings()
head(PP.matrix%*%W)
W
W
PP.W.one
head(PP.W)
log(1+PP.2)
head(log(1+PP.W))
log(.5)
head(log(1+PP.W))
head(log(PP.W))
log(PP.W)
sum(PP.W)
log(PP.W)
sum(log(PP.W))
my.em()
my.em()
W
my.em(1)
jacob <- my.em(1)
str(jacob)
jacob <- my.em(1)
str(jacob)
W
W
W
sum(W)
W
dim(PP.W)
head(z.numerator)
sum(z.numerator)
head(Z)
sum(Z[1,])
sum(W)
sum(Z[1,])
sum(W)
W
PP.W
W
rm(list=ls())
head(pp.raw<0)
rm(list=ls())
W
rm(list=ls())
head(y)
head(PP.matrix)
W
round(W)
round(W, 5)
str()
ls()
rm(list=ls())
str(BMA.fit)
plot(BMA.fit$pred.prob)
hist(BMA.fit$pred.prob)
W
BMA.fit$W
str(BMA.fit)
str(BMA.fit)
str(BMA.fit)
str(BMA.fit)
str(glm.model.econ)
glm.model.econ$coefficients
str(BMA.fit)
BMA.fit$model.params
str(icews)
icews$year
str(temp)
pp.m5-temp
class(model.lmer.econ)
demo(ICEWS2)
library(lme4)
library(ICEWS2)
predict.lmer(model.polisci)
library(lme4)
library(lme)
library(mer)
library(nlme)
fixef
libary(ICEWS2)
library(ICEWS2)
demo(ICEWS2)
jacob
length(jacob)
min(jacob)
max(jacob)
min(model.polisci@mu)
min(pp.m2)
hist(jacob)
?predict
?predict.glm
min(pp.m2)
max(pp.m2)
min(pp.m2)
min(pp.m2)
predict.glm
min(pp.m2)
max(pp.m2)
pp.m2-pp.m2.temp
pp.m2$fit-pp.m2.temp$fit
str(pp.m2)
head(pp.m2-pp.m2.temp)
str(pp.m2.temp)
head(pp.m2-pp.m2.temp)
pp.m2-pp.m2.temp
head(pp.m2)
head(pp.m2.temp)
pp.raw>0
pp.raw>0
pp.raw
pp.m1
sum(pp.m1<0)
pp.m2
sum(pp.m2<0)
pp.m3
hist(pp.m3)
hist(pp.m3)
hist(pp.m2)
hist(pp.m1)
pp.m3
hist(pp.m3)
hist(pp.m3)
demo(ICEWS2)
hist(pp.m3)
min(pp.m3)
hist(pp.m3)
hist(pp.m4)
hist(pp.m4)
hist(pp.m5)
BMA.fit$W
str(BMA.fit)
str(BMA.fit)
BMA.fit$W
colnames(icews)
table(icews$year)
dim(in.sample)
dim(out.sample)
dim(icews)
hit(in.m1)
hist(in.m1)
out.m1
hist(out.m1)
fitted(glm.model.econ)
hist(fitted(glm.model.econ))
hist(out.m2)
plot(out.m1, out.m2)
hist(pp.m3)
hist(out.m3)
max(pp.m4)
min(pp.m4)
BMA.fit$W
str(BMA.fit)
num.models
num.models
obj$model.params[1,]
obj$model.params[1,]
obj$model.params[,1]
num.obs
head(PP.matrix)
head(PP.matrix)
PP.matrix
PP.matrix
hist(PP.matrix)
obj$model.params[2,k]
obj$model.params[2,k]*newdata[,k]
obj$model.params[2,k]*(newdata[,k]^.333)
obj$model.params[2,k]*(newdata[,k]^.333)
new.data
newdat
newdata
obj$model.params
BMA.fit$W
BMA.fit$model.params
hist(newdata)
hist(PP.matrix)
hist(PP.matrix)
head(BMA.fit)
sum(is.na(BMA.fit))
str(BMA.fit)
PP.matrix
hist(PP.matrix)
head(PP.matrix%*%obj$W0
)
head(PP.matrix%*%obj$W)
head(PP.matrix)
obj$W
obj$W*PP.matrix[1,]
sum(obj$W*PP.matrix[1,])
predict.Ensemble.logit
str(BMA.pred)
BMA.pred
hist(BMA.pred)
 rowMeans(PP.matrix)
 hist(rowMeans(PP.matrix))
hist(BMA.pred)
BMA.fit$W
hist(BMA.pred)
.25^1/2
.25^1/3
BMA.fit$W
bma.auc
models.auc
bmea.brier
bma.brier
bma.brier
models.brier
models.brier
bma.brier
str(BMA.pred)
length(y.out)
length(newdata)
dim(newdata)
str(BMA.pred)
str(BMA.pred)
rm(list=ls())
rm(list=ls())
rm(my.em)
rm(list=ls())
package.skeleton(Ensemble.ICEWS)
getwd()
package.skeleton("Ensemble.ICEWS")
dim(Insample)
dim(Outsample)
print(BMA.fit$model.params)
print.table(BMA.fit$model.params)
Ensemble.logit(y=y.in, pp.raw=in.data, tol=.01, exp=4)
str(BMA.fit)
names(in.sample)
name(in.data)
names(in.data)
names(Insample)
str(BMA.fit)
ncol(obj$model.params)
signif(obj$W, 3)
signif(obj$W, 2)
signif(obj$W, digits=3)
round(obj$W, digits=3)
print(c(NA, "one", "two"))
print(c(NA, "one", "two"), na.print=NULL)
print(c(NULL, "one", "two"), na.print=NULL)
matrix(c(NULL, "One", "two"), nrow=1)
matrix(c(NULL, "One", "two", "three", "four", "five"), nrow=1)
matrix(c(NULL, "One", "two", "three", "four", "five"), nrow=2)
matrix(c(nA, "One", "two", "three", "four", "five"), nrow=2)
matrix(c(NA, "One", "two", "three", "four", "five"), nrow=2)
matrix(c(NA, "One", "two", "three", "four", "five"), nrow=2, quote=F)
matrix(c(NA, "One", "two", "three", "four", "five"), nrow=2, quote=FALSE)
print(matrix(c(NA, "One", "two", "three", "four", "five"), nrow=2))
print(matrix(c(NA, "One", "two", "three", "four", "five"), nrow=2), na.print=NULL)
print(matrix(c(NA, "One", "two", "three", "four", "five"), nrow=2), na.print="")
print(matrix(c(NA, "One", "two", "three", "four", "five"), nrow=2), na.print="", quote=F)
str(obj)
str(BMA.fit)
names(in.data)
str(BMA.fit)
str(BMA.fit)
str(BMA.fit)
colnames(in.data)
str(BMA.fit)
BMA.fit$model.names
str(BMA.fit)
str(BMA.fit)
str(BMA.fit)
colnames(in.data)
str(BMA.fit)
jacob<-Insample[,colnames(in.data)]
colnames(in.data)
BMA.fit$W
BMA.fit$model.params
BMA.fit$model.params
str(BMA.fit)
str(BMA.fit)
str(BMA.fit)
str(BMA.fit)
BMA.fit$models.auc
str(BMA.fit)
obj<-BMA.fit
obj$model.params
out
out[,1]
str(out)
str(obj)
out
out
out
str(obj)
out
out
out
obj$models.pre
obj$bma.pre
obj<-BMA.fit
out
out
round(out, digits=4)
digits=3
out.print
out.print
out.print
out.print
rm(obj)
rm(out)
rm(out.print)
rm(num.models)
print.Ensemble.logit(BMA.fit, 3)
print.Ensemble.logit(BMA.fit, 3)
print.Ensemble.logit(BMA.fit, 3)
obj<-BMA.fit
rm(obj)
rm(bias.print)
print.Ensemble.logit(BMA.fit)
print.Ensemble.logit(BMA.fit)
print.Ensemble.logit(BMA.fit)
BMA.fit$W
str(out.data)
out.data%*%BMA.fit$W
out.data%*%BMA.fit$W
jacob <- out.data%*%BMA.fit$W
str(jacob)
dim(out.data)
obj$W
BMA.fit$W
jacob <- out.data%*%BMA.fit$W
obj <- BMA.fit
obj$model.params
dim(adj.pred)
newdata <- out.data
obj$model.params[1,6]
obj$model.params[6,1]
num.models
)
class(out.data[,1])
class(as.vector(out.data[,1]))
is.vector(out.data[,1])
str(BMA.pred)
print.Ensemble.logit(BMA.pred)
BMA.fit$model.params
BMA.fit$model.params[1,1]
BMA.fit$W
bma.pred
dim(adj.pred)
print.Ensemble.logit(BMA.pred)
BMA.fit$W
BMA.fit$model.params[3,1]
hist(BMA.pred$pred.prob)
print.Ensemble.logit(BMA.fit)
ls()
rm(list=ls()
)
print.Ensemble.logit(BMA.pred)
obj <- BMA.fit
obj$exp
dim(out.data)
table(Outsample$insurgency)
table(y.out)
num.models
newdata <- out.data
num.obs
k<-1
hist(adj.pred)
hist(newdata[,k])
hist(adj.pred)
plot(blah, adj.pred)
summary(1+abs(blah))
summary(1+abs(blah))^(1/obj$exp)
summary((1+abs(blah))^(1/obj$exp))
summary((1+abs(blah))^(1/obj$exp)-1)
obj$W
head(PP.matrix)
PP.matrix[1,]%*%obj$W
print.Ensemble.logit(BMA.pred)
str(BMA.fit)
is.vector(obj$pred.prob)
class(obj$pred.prob)
str(Insample)
str(Total.in.pred)
names(Total.in.pred)
dim(Total.in.pred)
colnames(Total.in.pred)
str(Total.in.pred)
str(Insample)
names(Insample)
str(Outsample)
package.skeleton("Temp")
library(Ensemble.ICEWS)
demo(Ensemble.ICEWS)
demo(Ensemble.ICEWS)
search()
detach(Ensemble.ICEWS)
?search
detach("package:Ensemble.ICEWS")
search()
library(Ensemble.ICEWS)
demo(Ensemble.ICEWS)
detach("package:Ensemble.ICEWS")
rm(list=ls())
library(Ensemble.ICEWS)
detach("package:Ensemble.ICEWS")
library(Ensemble.ICEWS)
demo(Ensemble.ICEWS)
detach("package:Ensemble.ICEWS")
library(Ensemble.ICEWS)
demo(Ensemble.ICEWS)
